def print_char_list(array):
    for char in array:
        print(char)

def task1():
    n = int(input("Введите количество символов: "))
    array = []
    for _ in range(n):
        char = input("Введите символ: ")
        array.append(char)

    print("Введите последовательнсть символов: ")
    print_char_list(array)

    symbol = input("Введите символ, который нужно проверить: ")
    proverka1(array, symbol)

    first_symbol = input("Введите первый символ: ")
    second_symbol = input("Введите второй символ: ")

    proverka3(array)
    proverka4(array)
    proverka5(array)

def proverka1(array, symbol):
    if symbol in array:
        print(f"Символ '{symbol}' входит в последовательность {array}")
    else:
        print(f"Символ '{symbol}' не входит в последовательность {array}")

def proverka2(array, first_symbol, second_sumbol):
    pairs_count = 0
    for i in range(len(array) - 1):
        if array[i] == first_symbol and array[i + 1] == second_sumbol:
            pairs_count += 1
    print(f"Количество пар символов '{first_symbol}' и '{second_sumbol}': {pairs_count}")

def proverka3(array):
    pairs_count = 0
    for i in range(len(array) - 1):
        if array[i] == array[i + 1]:
            pairs_count += 1
    print(f"Количество пар соседствующих одинаковых символов: {pairs_count}")

def proverka4(array):
    for i in range(1, len(array) - 1):
        if array[i] == array[i + 1] and array[i - 1] == array[i + 2]:
            print("Условие proverka4 выполняется")
            return
    print("Условие proverka4 не выполняется")

def proverka5(array):
    spaces_count = 0
    for char in array:
        if char == " ":
            spaces_count += 1
    print(f"Количество пробелов в массиве: {spaces_count}")

task1()




____________________________________________________________
import random

# Создадим функцию, которая выводит элементы
# двухмерного массива символов в виде таблицы
def print_char_2d_array(array):
    for row in array:
        for char in row:
            print(char, end=" ")
        print()

# Создадим функцию, которая меняет символы в массиве,
# заменяя повторяющиеся символы на символ "x"
def preobrazovanie(array):
    n = len(array)
    for i in range(n):
        for j in range(n):
            if (i + 1) < n and array[i][j] == array[i + 1][j] and array[i][j] != 'x':
                array[i][j] = 'x'
                array[i + 1][j] = 'x'
            if (j + 1) < n and array[i][j] == array[i][j + 1] and array[i][j] != 'x':
                array[i][j] = 'x'
                array[i][j + 1] = 'x'

# Создадим двумерный массив символов заданного размера,
# заполним его случайными символами
def task2():
    n = int(input("Введите заданный размер массива: "))
    array = [[random.choice('ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') for _ in range(n + 1)] for _ in range(n + 1)]

    print("Исходный массив")
    print_char_2d_array(array)

    print("\nМодифицированный массив: ")
    preobrazovanie(array)
    print_char_2d_array(array)

task2()


----------------------------------------------------------------------------------------------
import random

# Создадим функцию, которая выводит элементы
# двухмерного массива символов в виде таблицы
def print_char_2d_array(array):
    for row in array:
        for char in row:
            if char == '×':
                print('\033[91m' + char + '\033[0m', end=" ")
            else:
                print(char, end=" ")
        print()

# Создадим функцию, которая меняет символы в массиве,
# заменяя повторяющиеся символы на символ "×"
def preobrazovanie(array):
    n = len(array)
    for i in range(n):
        for j in range(n):
            if (i + 1) < n and array[i][j] == array[i + 1][j] and array[i][j] != '×':
                array[i][j] = '×'
                array[i + 1][j] = '×'
            if (j + 1) < n and array[i][j] == array[i][j + 1] and array[i][j] != '×':
                array[i][j] = '×'
                array[i][j + 1] = '×'

# Создадим двумерный массив символов заданного размера,
# заполним его случайными символами
def task2():
    alfavit = 'abcdifghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    n = int(input("Введите заданный размер массива: "))
    array = [[random.choice(alfavit) for _ in range(n + 1)] for _ in range(n + 1)]

    print("Исходный массив")
    print_char_2d_array(array)

    print("\nМодифицированный массив: ")
    preobrazovanie(array)
    print_char_2d_array(array)

task2()


------------------------------------------------------------------------------
Окончтельная версия второга задания:

import random

# Создадим функцию, которая выводит элементы
# двухмерного массива символов в виде таблицы
def print_char_2d_array(array):
    for row in array:
        for char in row:
            if char == '×':
                print('\033[91m' + char + '\033[0m', end=" ")
            else:
                print(char, end=" ")
        print()

# Создадим функцию, которая меняет символы в массиве,
# заменяя повторяющиеся символы на символ "×"
def preobrazovanie(array):
    for i in range(len(array)):
        j = 0
        while j < (len(array[i]) - 1):
            count = 1
            while j + count < len(array[i]) and array[i][j + count] == array[i][j]:
                count += 1
            if count >= 2 and array[i][j].isalnum():
                for k in range(count):
                    array[i][j + k] = '×'
            j += count
            
    for j in range(len(array)):
        i = 0
        while i < (len(array[j]) - 1):
            count = 1
            while i + count < len(array[j]) and array[i + count][j] == array[i][j]:
                count += 1
            if count >= 2 and array[i][j].isalnum():
                for s in range(count):
                    array[i + s][j] = '×'
            i += count

# Создадим двумерный массив символов заданного размера,
# заполним его случайными символами
def task2():
    alfavit = 'abcdifghigklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
    n = int(input("Введите заданный размер массива: "))
    array = [[random.choice(alfavit) for _ in range(n + 1)] for _ in range(n + 1)]

    print("Исходный массив")
    print_char_2d_array(array)

    print("\nМодифицированный массив: ")
    preobrazovanie(array)
    print_char_2d_array(array)

task2()
