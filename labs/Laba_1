# Nemtin Roman
def task1():

    import math
    x = float(input("Введите значение x: "))
    y = float(input("Введите значение y: "))
    z = float(input("Введите значение z: "))

    a = (math.sqrt(abs(x - 1)) + math.tan(y)) / 1 + ((x ** 2) / 2) - math.log(1 + y)

    b = math.sin(math.sqrt(abs(x - 1))) * math.cos(abs((z) ** (1 / 3))) + (x ** (1 / 3)) + math.sqrt(y)

    print("a = {0:.4f}, b = {1:.4f}".format(a, b))
# task1()



def task2():

    x = float(input("Введите значение x: "))

    a = 3
    b = -2

    f = a * (((x ** b) + x) / 4) - ((x ** (b / 3)))

    print("f = {0:.4f}".format(f))
# task2()



def task3():

    import math
    x = float(input("Введите значение x: "))

    f1 = (abs(math.cos(math.sqrt(x))))
    f2 = (abs(math.log10(f1)))
    f = math.sqrt(f2)
    print("f = {0:.4f}".format(f))
# task3()



def task4():
    a = float(input("Введите значение a: "))
    b = float(input("Введите значение b: "))

# Вычисление коэффициентов квадратного уравнения
# Квадратное уравнение имеет вид: ax^2 + bx + c = 0
# Зная корни уравнений x1 и x2, мы можем найти коэффициенты c и b следующим образом:

    c = a * (a + b)
    b = -a * (a + b)

    print(f"Коэффициенты квадратного уравнения с корнями {a} и {b}")
    print(f"a = {a}")
    print(f"b = {b}")
    print(f"c = {c}")
# task4()



def task5():

    def find_height(v0, N):
        G = 9.8    # Ускорение свободного падения
        t = v0 / (G * (1 - N))
        h = v0 * t - 0.5 * G * t ** 2
        return h

    v0 = float(input("Задайте начальную скорость (в м/с): "))
    N = float(input("Задайте N (скорость уменьшится в N раз): "))

    height = find_height(v0, N)
    print("N = {0:.4f}".format(N))
    print("height = {0:.4f}".format(height))
    print(f"Скорость уменьшится в {N} раз на высоте {height:0.4f} метров")
# task5()



def task6():

    a = float(input("Введите значение a: "))
    b = float(input("Введите значение b: "))
    c = float(input("Введите значение c: "))

    if ((a + b) > c) and ((a + c) > b) and ((b + c) > a):
        print("Треугольник является прямоугольным ==>")
        area = (a + b + c) / 2
        print("==> Площадь треугольника равна {0:.4f} у.е".format(area))
    else:
        print("Треугольник не является прямоугольным ==> невозможно определить площадь треугольника")
# task6()



def task7():
    while True:
        A1, B1, C1, A2, B2, C2 = map(float, input("Введите 6 значений коэффициентов, которые находятся в границах [-10: 10] через запятую: ").split(","))
        if ((-10 <= A1 <= 10) and (-10 <= B1 <= 10) and (-10 <= C1 <= 10) and (-10 <= A2 <= 10) and (-10 <= B2 <= 10) and (-10 <= C2 <= 10)):

            D = A1 * B1 - A2 * B1
            x = (C1 * B2 - C2 * B1) / D
            y = (A1 * C2 - A2 * C1) / D

            C1 = A1 * x + B1 * y
            C2 = A2 * x + B2 * y
            print("Значения коэффициентов: A1 = {0:.4f}, B1 = {1:.4f}, C1 = {2:.4f}, A2 = {3:.4f}, B2 = {4:.4f}, C2 = {5:.4f}".format(A1, B1, C1, A2, B2, C2))
            print("Ответ: y = {0:.4f}".format(y))
        else:
            print("Не удовлетворяет условию задачи")
        break
# task7()



def task8():

    import math
    n = int(input("Введите количество оборотов: "))
    v = float(input("Введите скорость (м/с): "))
    R = float(input("Введите радиус окружности (м): "))
    t = float(input("Введите время после начала движения (с): "))

    full_rotation_time = n * 2 * math.pi * R / v
    tangential_acceleration = v / full_rotation_time ** 2
    normal_acceleration = (tangential_acceleration * full_rotation_time * t) ** 2 / R

    print(f"Нормальное ускорение через {t} с после начала движения: " f"{normal_acceleration:0.4f} м/с^2")
# task8()



def task9():

    current_price = 35
    target_price = float(input("Введите стоимость поездки (руб): "))
    increase = 0.04

    year = 0
    while current_price < target_price:
        current_price += (current_price * increase)
        year += 1

    print(f"Стоимость поездки в размере {target_price:0.0f} рублей, будет достигнута через " f"{year:0.0f} год(-а) / лет")
# task9()
